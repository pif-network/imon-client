package task

import "strconv"
import "the-gorgeouses.com/imon-client/internal/views/components"

func formatUpdateTaskPayload(state string) string {
	return `{"state": "` + state + `"}`
}

templ TaskItem(task Task, isLogTask bool) {
	<div
 		class="p-4 mb-2 flex justify-center items-center gap-2 border border-gray-400 rounded-lg"
 		hx-target="this"
	>
		<div>
			<h3>[{ string(task.State) }] { task.Name }</h3>
			<div class="flex">
				<span>
					if (task.State == End) {
						Finished in { strconv.Itoa(task.Duration) }
					} else if (task.State == Break|| task.State == Back) {
						Running for { strconv.Itoa(task.Duration) }
					}
				</span>
			</div>
		</div>
		if (task.State != End && !isLogTask) {
			<div
 				class="cursor-pointer"
 				hx-post="/api/task/update"
 				hx-swap="outerHTML"
 				hx-trigger="click"
 				hx-vals={ formatUpdateTaskPayload(End.String()) }
			>
				@components.CheckIcon()
			</div>
		}
	</div>
}

templ CurrentTaskAndExecutionLog(taskLog TaskLog) {
	if len(taskLog.TaskHistory) > 0 {
		<h2 class="mb-4 font-bold text-3xl">Current task</h2>
		@TaskItem(taskLog.CurrentTask, false)
	} else {
		<h2 class="mb-4 font-bold text-3xl">No tasks</h2>
	}
	<h2 class="mb-4 font-bold text-3xl">Task log</h2>
	<ul>
		for _, t := range taskLog.TaskHistory {
			<li>
				@TaskItem(t, true)
			</li>
		}
	</ul>
}

templ ActiveUserList(userRecords []TaskLog) {
	<section id="user-list" hx-swap-oob="true">
		<h2 class="mb-4 font-bold text-3xl">Active users</h2>
		<ul>
			for _, record := range userRecords {
				<li>
					{ record.UserName } -> [{ record.CurrentTask.State.String() }] { record.CurrentTask.Name }
				</li>
			}
		</ul>
	</section>
}
